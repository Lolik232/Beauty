<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Beauty.WPF.Resources.Styles"
                    xmlns:ValueConverters="clr-namespace:Beauty.WPF.ValuesConverters"
                    xmlns:DTOs="clr-namespace:Beauty.Core.DTOs;assembly=Beauty.Core"
                    xmlns:Models="clr-namespace:Beauty.Data.Models;assembly=Beauty.Data"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:Controls="clr-namespace:Beauty.WPF.Controls">

    <SolidColorBrush x:Key="ComboBox.Static.Border" 
                     Color="#FFACACAC"/>

    <SolidColorBrush x:Key="ComboBox.Static.Glyph" 
                     Color="#FF606060"/>

    <SolidColorBrush x:Key="ComboBox.Checked.Border" 
                     Color="#FFABADB3"/>

    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" 
                     Color="#FFBFBFBF"/>

    <SolidColorBrush x:Key="ComboBox.Disabled.Background" 
                     Color="#FFF0F0F0"/>

    <SolidColorBrush x:Key="ComboBox.Disabled.Border"
                     Color="#FFD9D9D9"/>

    <SolidColorBrush x:Key="ComboBoxItem.ItemsViewHover.Background" 
                     Color="#1F26A0DA"/>

    <SolidColorBrush x:Key="ComboBoxItem.ItemsViewHover.Border" 
                     Color="#A826A0DA"/>

    <SolidColorBrush x:Key="ComboBoxItem.ItemsViewSelected.Background" 
                     Color="#3D26A0DA"/>

    <SolidColorBrush x:Key="ComboBoxItem.ItemsViewSelected.Border" 
                     Color="#FF26A0DA"/>

    <SolidColorBrush x:Key="ComboBoxItem.ItemsViewSelectedHover.Background" 
                     Color="#2E0080FF"/>

    <SolidColorBrush x:Key="ComboBoxItem.ItemsViewSelectedHover.Border" 
                     Color="#99006CD9"/>

    <SolidColorBrush x:Key="ComboBoxItem.ItemsViewSelectedNoFocus.Background" 
                     Color="#3DDADADA"/>

    <SolidColorBrush x:Key="ComboBoxItem.ItemsViewSelectedNoFocus.Border" 
                     Color="#FFDADADA"/>

    <SolidColorBrush x:Key="ComboBoxItem.ItemsViewFocus.Border" 
                     Color="#FF26A0DA"/>

    <SolidColorBrush x:Key="ComboBoxItem.ItemsViewHoverFocus.Background" 
                     Color="#5426A0DA"/>

    <SolidColorBrush x:Key="ComboBoxItem.ItemsViewHoverFocus.Border" 
                     Color="#FF26A0DA"/>

    <DataTemplate x:Key="BaseComboBoxItemTemlate">

        <StackPanel Margin="5,4,5,4">

            <TextBlock Text="{Binding}"/>

        </StackPanel>

    </DataTemplate>

    <DataTemplate x:Key="WorkerComboBoxItemTemlate"
                  DataType="{x:Type DTOs:WorkerDTO}">

        <StackPanel Margin="5,4,5,4">

            <TextBlock Text="{Binding Shortname}"/>

            <TextBlock Text="{Binding Positions}"
                       Style="{StaticResource AnnotationTextBlockStyle}"/>

        </StackPanel>

    </DataTemplate>

    <DataTemplate x:Key="ServiceComboBoxItemTemlate"
                  DataType="{x:Type Models:Service}">

        <StackPanel Margin="5,4,5,4">

            <TextBlock Text="{Binding Title}"/>

        </StackPanel>

    </DataTemplate>

    <DataTemplate x:Key="DateComboBoxItemTemplate"
                  DataType="{x:Type System:DateTime}">

        <StackPanel Margin="5,4,5,4">

            <TextBlock Text="{Binding Path=Date, Converter={ValueConverters:DateValueConverter}}"/>

        </StackPanel>

    </DataTemplate>

    <ControlTemplate x:Key="BaseComboBoxToggleButtonTemplate" 
                     TargetType="{x:Type ToggleButton}">

        <Border x:Name="templateRoot" 
                CornerRadius="4" 
                BorderBrush="{StaticResource ComboBox.Static.Border}"
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{StaticResource App.Transparent}"
                SnapsToDevicePixels="true">

            <Border x:Name="splitBorder" 
                    BorderBrush="{StaticResource App.Transparent}"
                    BorderThickness="1" 
                    HorizontalAlignment="Right" 
                    Margin="0,0,3,0" 
                    SnapsToDevicePixels="true" 
                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">

                <Path x:Name="arrow" 
                      Width="24" 
                      Height="24" 
                      Data="{StaticResource ArrowIcon}" 
                      Fill="{StaticResource ComboBox.Static.Glyph}" 
                      HorizontalAlignment="Center"
                      Margin="0" 
                      VerticalAlignment="Center"/>

            </Border>

        </Border>

        <ControlTemplate.Triggers>

            <Trigger Property="IsChecked" 
                     Value="true">

                <Setter Property="CornerRadius"
                        TargetName="templateRoot"
                        Value="4,4,0,0"/>

                <Setter Property="BorderBrush" 
                        TargetName="templateRoot" 
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>

            </Trigger>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter Property="BorderBrush" 
                        TargetName="templateRoot" 
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>

            </Trigger>

            <Trigger Property="IsEnabled" 
                     Value="false">

                <Setter Property="Opacity" 
                        TargetName="arrow" 
                        Value="0.56"/>

            </Trigger>

            <MultiDataTrigger>

                <MultiDataTrigger.Conditions>

                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" 
                               Value="false"/>

                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" 
                               Value="false"/>

                </MultiDataTrigger.Conditions>

                <Setter Property="Background" 
                        TargetName="templateRoot" 
                        Value="{StaticResource ComboBox.Disabled.Background}"/>

                <Setter Property="BorderBrush" 
                        TargetName="templateRoot" 
                        Value="{StaticResource ComboBox.Disabled.Border}"/>

            </MultiDataTrigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style x:Key="BaseComboBoxToggleButton"
           TargetType="{x:Type ToggleButton}">
        
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        
        <Setter Property="IsTabStop"
                Value="false"/>
        
        <Setter Property="Focusable" 
                Value="false"/>
        
        <Setter Property="ClickMode" 
                Value="Press"/>

        <Setter Property="Cursor"
                Value="Hand"/>

        <Setter Property="Template"
                Value="{StaticResource BaseComboBoxToggleButtonTemplate}"/>

    </Style>

    <ControlTemplate x:Key="BaseComboBoxTemplate" 
                     TargetType="{x:Type ComboBox}">
        
        <Grid x:Name="templateRoot" 
              SnapsToDevicePixels="true">
            
            <Grid.ColumnDefinitions>
                
                <ColumnDefinition Width="*"/>
                
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                  Width="0"/>
            
            </Grid.ColumnDefinitions>
            
            <Popup x:Name="PART_Popup" 
                   AllowsTransparency="true" 
                   Grid.ColumnSpan="2" 
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                   Margin="1" 
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                   Placement="Bottom">
                
                <Border x:Name="dropDownBorder" 
                        BorderBrush="{StaticResource ComboBox.Checked.Border}" 
                        BorderThickness="1,0,1,1" 
                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" 
                        MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                        MaxWidth="{Binding ActualWidth, ElementName=templateRoot}">
                   
                    <ScrollViewer x:Name="dropDownScrollViewer" 
                                  Cursor="Hand">

                        <Grid x:Name="grid" 
                              RenderOptions.ClearTypeHint="Enabled">

                            <Canvas x:Name="canvas" 
                                    HorizontalAlignment="Left" 
                                    Height="0" 
                                    VerticalAlignment="Top" 
                                    Width="0">
                       
                                <Rectangle x:Name="opaqueRect"
                                           Fill="{Binding Background, ElementName=dropDownBorder}" 
                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                      
                            </Canvas>
                      
                            <ItemsPresenter x:Name="ItemsPresenter" 
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                 
                        </Grid>
              
                    </ScrollViewer>
            
                </Border>
            
            </Popup>
            
            <ToggleButton x:Name="toggleButton" 
                          BorderBrush="{TemplateBinding BorderBrush}" 
                          BorderThickness="{TemplateBinding BorderThickness}" 
                          Background="{TemplateBinding Background}" 
                          Grid.ColumnSpan="2" 
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                          Style="{StaticResource BaseComboBoxToggleButton}"/>
            
            <ContentPresenter x:Name="contentPresenter" 
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                              Content="{TemplateBinding SelectionBoxItem}" 
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              IsHitTestVisible="false" 
                              Margin="6,3,0,0" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        
        </Grid>
        
        <ControlTemplate.Triggers>

            <Trigger Property="HasItems" 
                     Value="false">

                <Setter Property="Height" 
                        TargetName="dropDownBorder" 
                        Value="38"/>

            </Trigger>

            <Trigger Property="IsChecked"
                     SourceName="toggleButton"
                     Value="true">

                <Setter Property="BorderBrush"
                        TargetName="dropDownBorder"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>

            </Trigger>

            <MultiTrigger>
                
                <MultiTrigger.Conditions>
                    
                    <Condition Property="IsGrouping" 
                               Value="true"/>
                    
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" 
                               Value="false"/>
                    
                </MultiTrigger.Conditions>
                
                <Setter Property="ScrollViewer.CanContentScroll" 
                        Value="false"/>
                
            </MultiTrigger>
            
            <Trigger Property="ScrollViewer.CanContentScroll" 
                     SourceName="dropDownScrollViewer" 
                     Value="false">
                
                <Setter Property="Canvas.Top" 
                        TargetName="opaqueRect" 
                        Value="{Binding VerticalOffset, ElementName=dropDownScrollViewer}"/>
                
                <Setter Property="Canvas.Left" 
                        TargetName="opaqueRect" 
                        Value="{Binding HorizontalOffset, ElementName=dropDownScrollViewer}"/>
                
            </Trigger>
            
        </ControlTemplate.Triggers>
        
    </ControlTemplate>

    <Style x:Key="BaseComboBoxItemContainerStyle" 
           TargetType="{x:Type ComboBoxItem}">

        <Setter Property="SnapsToDevicePixels" 
                Value="True"/>

        <Setter Property="Padding" 
                Value="4,1"/>

        <Setter Property="HorizontalContentAlignment" 
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>

        <Setter Property="VerticalContentAlignment" 
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>

        <Setter Property="BorderBrush"
                Value="{x:Null}"/>

        <Setter Property="BorderThickness" 
                Value="0"/>

        <Setter Property="Background" 
                Value="{StaticResource App.Transparent}"/>

    </Style>

    <Style x:Key="BaseComboBoxStyle" 
           TargetType="{x:Type ComboBox}">
        
        <Setter Property="Background" 
                Value="{StaticResource App.Transparent}"/>
        
        <Setter Property="BorderBrush" 
                Value="{StaticResource ComboBox.Static.Border}"/>
        
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>

        <Setter Property="BorderThickness" 
                Value="1"/>

        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" 
                Value="Disabled"/>
        
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" 
                Value="Auto"/>
        
        <Setter Property="Padding" 
                Value="6,3,5,3"/>
        
        <Setter Property="ScrollViewer.CanContentScroll" 
                Value="true"/>
        
        <Setter Property="ScrollViewer.PanningMode" 
                Value="Both"/>

        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False"/>

        <Setter Property="ItemTemplate"
                Value="{StaticResource BaseComboBoxItemTemlate}"/>

        <Setter Property="ItemContainerStyle"
                Value="{StaticResource BaseComboBoxItemContainerStyle}"/>

        <Setter Property="Template" 
                Value="{StaticResource BaseComboBoxTemplate}"/>
        
    </Style>
    
    <Style TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource BaseComboBoxStyle}"/>

    <ControlTemplate x:Key="BaseWatermarkComboBoxTemplate" 
                     TargetType="{x:Type Controls:WatermarkComboBox}">

        <Grid x:Name="templateRoot" 
              SnapsToDevicePixels="true">

            <Grid.ColumnDefinitions>

                <ColumnDefinition Width="*"/>

                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                  Width="0"/>

            </Grid.ColumnDefinitions>

            <Popup x:Name="PART_Popup" 
                   AllowsTransparency="true" 
                   Grid.ColumnSpan="2" 
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                   Margin="1" 
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                   Placement="Bottom">

                <Border x:Name="dropDownBorder" 
                        BorderBrush="{StaticResource ComboBox.Checked.Border}" 
                        BorderThickness="1,0,1,1" 
                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" 
                        MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                        MaxWidth="{Binding ActualWidth, ElementName=templateRoot}">

                    <ScrollViewer x:Name="dropDownScrollViewer" 
                                  Cursor="Hand">

                        <Grid x:Name="grid" 
                              RenderOptions.ClearTypeHint="Enabled">

                            <Canvas x:Name="canvas" 
                                    HorizontalAlignment="Left" 
                                    Height="0" 
                                    VerticalAlignment="Top" 
                                    Width="0">

                                <Rectangle x:Name="opaqueRect"
                                           Fill="{Binding Background, ElementName=dropDownBorder}" 
                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>

                            </Canvas>

                            <ItemsPresenter x:Name="ItemsPresenter" 
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>

                        </Grid>

                    </ScrollViewer>

                </Border>

            </Popup>
            
            <ToggleButton x:Name="toggleButton" 
                          Grid.ColumnSpan="2" 
                          BorderBrush="{TemplateBinding BorderBrush}" 
                          BorderThickness="{TemplateBinding BorderThickness}" 
                          Background="{TemplateBinding Background}" 
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                          Style="{StaticResource BaseComboBoxToggleButton}"/>

            <TextBlock x:Name="watermark"
                       Margin="10,4,10,4" 
                       HorizontalAlignment="Left" 
                       VerticalAlignment="Center"
                       IsHitTestVisible="false" 
                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                       Text="{TemplateBinding Watermark}"
                       Style="{StaticResource AnnotationTextBlockStyle}"/>
            
            <ContentPresenter x:Name="contentPresenter" 
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                              Content="{TemplateBinding SelectionBoxItem}" 
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              IsHitTestVisible="false" 
                              Margin="6,3,0,0" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

        </Grid>

        <ControlTemplate.Triggers>

            <Trigger Property="HasItems" 
                     Value="false">

                <Setter Property="Height" 
                        TargetName="dropDownBorder" 
                        Value="38"/>

            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="false">

                <Setter Property="Visibility"
                        TargetName="watermark"
                        Value="Collapsed"/>

            </Trigger>

            <DataTrigger Binding="{Binding Path=SelectedItem, RelativeSource={x:Static RelativeSource.Self}, Converter={ValueConverters:NullToBooleanValueConverter}}"
                         Value="True">

                <Setter Property="Visibility"
                        TargetName="watermark"
                        Value="Collapsed"/>

            </DataTrigger>

            <Trigger Property="IsChecked"
                     SourceName="toggleButton"
                     Value="true">

                <Setter Property="BorderBrush"
                        TargetName="dropDownBorder"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>

            </Trigger>

            <MultiTrigger>

                <MultiTrigger.Conditions>

                    <Condition Property="IsGrouping" 
                               Value="true"/>

                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" 
                               Value="false"/>

                </MultiTrigger.Conditions>

                <Setter Property="ScrollViewer.CanContentScroll" 
                        Value="false"/>

            </MultiTrigger>

            <Trigger Property="ScrollViewer.CanContentScroll" 
                     SourceName="dropDownScrollViewer" 
                     Value="false">

                <Setter Property="Canvas.Top" 
                        TargetName="opaqueRect" 
                        Value="{Binding VerticalOffset, ElementName=dropDownScrollViewer}"/>

                <Setter Property="Canvas.Left" 
                        TargetName="opaqueRect" 
                        Value="{Binding HorizontalOffset, ElementName=dropDownScrollViewer}"/>

            </Trigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style x:Key="BaseWatermarkComboBoxStyle" 
           TargetType="{x:Type Controls:WatermarkComboBox}"
           BasedOn="{StaticResource BaseComboBoxStyle}">

        <Setter Property="Template" 
                Value="{StaticResource BaseWatermarkComboBoxTemplate}"/>

    </Style>

    <Style TargetType="{x:Type Controls:WatermarkComboBox}"
           BasedOn="{StaticResource BaseWatermarkComboBoxStyle}"/>

</ResourceDictionary>