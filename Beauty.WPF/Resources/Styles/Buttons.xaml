<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Beauty.WPF.Resources.Styles"
                    xmlns:Controls="clr-namespace:Beauty.WPF.Controls">

    <SolidColorBrush x:Key="Button.MouseOver.Background"
                     Color="#FFBEE6FD"/>

    <SolidColorBrush x:Key="Button.MouseOver.Border"
                     Color="#FF3C7FB1"/>

    <SolidColorBrush x:Key="Button.Pressed.Background"
                     Color="#FFC4E5F6"/>

    <SolidColorBrush x:Key="Button.Pressed.Border"
                     Color="#FF2C628B"/>

    <SolidColorBrush x:Key="Button.Enabled.Background"
                     Color="#FFF4F4F4"/>

    <SolidColorBrush x:Key="Button.Enabled.Border"
                     Color="#FFADB2B5"/>

    <SolidColorBrush x:Key="Button.Enabled.Foreground"
                     Color="#FF838383"/>

    <SolidColorBrush x:Key="Button.Toggle.Checked.Background"
                     Color="#FFBCDDEE"/>

    <SolidColorBrush x:Key="Button.Toggle.Checked.Border"
                     Color="#FF245A83"/>

    <ControlTemplate x:Key="BaseButtonTemplate" 
                     TargetType="{x:Type ButtonBase}">

        <Border x:Name="border" 
                CornerRadius="4"
                Padding="{TemplateBinding Padding}"
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}" 
                SnapsToDevicePixels="True">

            <ContentPresenter x:Name="contentPresenter" 
                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                              Content="{TemplateBinding Content}" 
                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                              Focusable="False" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

        </Border>

        <ControlTemplate.Triggers>

            <Trigger Property="Button.IsDefaulted" 
                     Value="True">

                <Setter Property="BorderBrush" 
                        TargetName="border" 
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>

            </Trigger>

            <Trigger Property="IsMouseOver" 
                     Value="True">

                <Setter Property="Background" 
                        TargetName="border" 
                        Value="{StaticResource Button.MouseOver.Background}"/>

                <Setter Property="BorderBrush" 
                        TargetName="border" 
                        Value="{StaticResource Button.MouseOver.Border}"/>

            </Trigger>

            <Trigger Property="IsPressed" 
                     Value="True">

                <Setter Property="Background" 
                        TargetName="border" 
                        Value="{StaticResource Button.Pressed.Background}"/>

                <Setter Property="BorderBrush" 
                        TargetName="border" 
                        Value="{StaticResource Button.Pressed.Border}"/>

            </Trigger>

            <Trigger Property="ToggleButton.IsChecked"
                     Value="True">

                <Setter Property="Background" 
                        TargetName="border" 
                        Value="{StaticResource Button.Toggle.Checked.Background}"/>

                <Setter Property="BorderBrush"
                        TargetName="border" 
                        Value="{StaticResource Button.Toggle.Checked.Border}"/>

            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">

                <Setter Property="Background" 
                        TargetName="border"
                        Value="{StaticResource Button.Enabled.Background}"/>

                <Setter Property="BorderBrush" 
                        TargetName="border" 
                        Value="{StaticResource Button.Enabled.Border}"/>

                <Setter Property="Foreground"
                        Value="{StaticResource Button.Enabled.Foreground}"/>

            </Trigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style x:Key="BaseButtonStyle" 
           TargetType="{x:Type Button}">

        <Setter Property="Background"
                Value="{StaticResource App.Transparent}"/>

        <Setter Property="Cursor" 
                Value="Hand"/>

        <Setter Property="FontSize"
                Value="{StaticResource NormalFontSize}"/>

        <Setter Property="Padding"
                Value="5"/>

        <Setter Property="MinWidth"
                Value="32"/>

        <Setter Property="MinHeight"
                Value="32"/>

        <Setter Property="MaxWidth"
                Value="250"/>

        <Setter Property="MaxHeight"
                Value="32"/>

        <Setter Property="Template"
                Value="{StaticResource BaseButtonTemplate}"/>

    </Style>

    <Style TargetType="{x:Type Button}" 
           BasedOn="{StaticResource BaseButtonStyle}"/>

    <ControlTemplate x:Key="BaseIconButtonTemplate"
                     TargetType="{x:Type Controls:IconButton}">

        <Border x:Name="border" 
                CornerRadius="4"
                Padding="{TemplateBinding Padding}"
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}" 
                SnapsToDevicePixels="True">

            <Grid>

                <Grid.ColumnDefinitions>

                    <ColumnDefinition Width="*"/>

                    <ColumnDefinition Width="Auto"/>

                    <ColumnDefinition Width="3"/>

                    <ColumnDefinition Width="Auto"/>

                    <ColumnDefinition Width="*"/>

                </Grid.ColumnDefinitions>

                <Viewbox x:Name="iconViewbox"
                         Width="32"
                         Height="32"
                         Grid.Column="1">

                    <Canvas Width="24"
                            Height="24">

                        <Path Fill="{TemplateBinding Foreground}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Data="{TemplateBinding Icon}"/>

                    </Canvas>

                </Viewbox>

                <ContentPresenter x:Name="contentPresenter" 
                                  Grid.Column="3"
                                  ContentTemplate="{TemplateBinding ContentTemplate}" 
                                  Content="{TemplateBinding Content}" 
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                  Focusable="False" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

            </Grid>

        </Border>

        <ControlTemplate.Triggers>

            <Trigger Property="Button.IsDefaulted" 
                     Value="True">

                <Setter Property="BorderBrush" 
                        TargetName="border" 
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>

            </Trigger>

            <Trigger Property="IsMouseOver" 
                     Value="True">

                <Setter Property="Background" 
                        TargetName="border" 
                        Value="{StaticResource Button.MouseOver.Background}"/>

                <Setter Property="BorderBrush" 
                        TargetName="border" 
                        Value="{StaticResource Button.MouseOver.Border}"/>

            </Trigger>

            <Trigger Property="IsPressed" 
                     Value="True">

                <Setter Property="Background" 
                        TargetName="border" 
                        Value="{StaticResource Button.Pressed.Background}"/>

                <Setter Property="BorderBrush" 
                        TargetName="border" 
                        Value="{StaticResource Button.Pressed.Border}"/>

            </Trigger>

            <Trigger Property="ToggleButton.IsChecked"
                     Value="True">

                <Setter Property="Background" 
                        TargetName="border" 
                        Value="{StaticResource Button.Toggle.Checked.Background}"/>

                <Setter Property="BorderBrush"
                        TargetName="border" 
                        Value="{StaticResource Button.Toggle.Checked.Border}"/>

            </Trigger>

            <Trigger Property="Content"
                     Value="{x:Null}">

                <Setter Property="CornerRadius"
                        TargetName="border"
                        Value="25"/>

                <Setter Property="Grid.ColumnSpan"
                        TargetName="iconViewbox"
                        Value="2"/>

            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">

                <Setter Property="Background" 
                        TargetName="border"
                        Value="{StaticResource Button.Enabled.Background}"/>

                <Setter Property="BorderBrush" 
                        TargetName="border" 
                        Value="{StaticResource Button.Enabled.Border}"/>

                <Setter Property="Foreground"
                        Value="{StaticResource Button.Enabled.Foreground}"/>

            </Trigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style x:Key="BaseIconButtonStyle"
           TargetType="{x:Type Controls:IconButton}">

        <Setter Property="Background"
                Value="{StaticResource App.Transparent}"/>

        <Setter Property="Cursor" 
                Value="Hand"/>

        <Setter Property="FontSize"
                Value="{StaticResource NormalFontSize}"/>

        <Setter Property="Padding"
                Value="5"/>

        <Setter Property="MinWidth"
                Value="32"/>

        <Setter Property="MinHeight"
                Value="32"/>

        <Setter Property="MaxWidth"
                Value="250"/>

        <Setter Property="MaxHeight"
                Value="32"/>

        <Setter Property="Template"
                Value="{StaticResource BaseIconButtonTemplate}"/>

    </Style>

    <Style TargetType="{x:Type Controls:IconButton}"
           BasedOn="{StaticResource BaseIconButtonStyle}"/>

    <ControlTemplate x:Key="AddButtonTemplate"
                     TargetType="{x:Type Controls:IconButton}">

        <Border x:Name="border" 
                CornerRadius="4"
                Padding="{TemplateBinding Padding}"
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}" 
                SnapsToDevicePixels="True">

            <Grid>

                <Grid.ColumnDefinitions>

                    <ColumnDefinition Width="*"/>

                    <ColumnDefinition Width="Auto"/>

                    <ColumnDefinition Width="3"/>

                    <ColumnDefinition Width="Auto"/>

                    <ColumnDefinition Width="*"/>

                </Grid.ColumnDefinitions>

                <Viewbox x:Name="iconViewbox"
                         Grid.Column="1">

                    <Canvas Width="24"
                            Height="24">

                        <Path Fill="{TemplateBinding Foreground}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Data="{TemplateBinding Icon}"/>

                    </Canvas>

                </Viewbox>

                <ContentPresenter x:Name="contentPresenter" 
                                  Grid.Column="3"
                                  ContentTemplate="{TemplateBinding ContentTemplate}" 
                                  Content="{TemplateBinding Content}" 
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                  Focusable="False" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

            </Grid>

        </Border>

        <ControlTemplate.Triggers>

            <Trigger Property="Button.IsDefaulted" 
                     Value="True">

                <Setter Property="BorderBrush" 
                        TargetName="border" 
                        Value="{StaticResource App.VioletBlue}"/>

            </Trigger>

            <Trigger Property="IsMouseOver" 
                     Value="True">

                <Setter Property="Background" 
                        TargetName="border" 
                        Value="{StaticResource App.LightGreen}"/>

            </Trigger>

            <Trigger Property="IsPressed" 
                     Value="True">

                <Setter Property="Background" 
                        TargetName="border" 
                        Value="{StaticResource App.DarkGreen}"/>

            </Trigger>

            <Trigger Property="ToggleButton.IsChecked"
                     Value="True">

                <Setter Property="Background" 
                        TargetName="border" 
                        Value="{StaticResource Button.Toggle.Checked.Background}"/>

                <Setter Property="BorderBrush"
                        TargetName="border" 
                        Value="{StaticResource Button.Toggle.Checked.Border}"/>

            </Trigger>

            <Trigger Property="Content"
                     Value="{x:Null}">

                <Setter Property="Grid.ColumnSpan"
                        TargetName="iconViewbox"
                        Value="2"/>

            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">

                <Setter Property="Background" 
                        TargetName="border"
                        Value="{StaticResource Button.Enabled.Background}"/>

                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource Button.Enabled.Border}"/>

                <Setter Property="Foreground"
                        Value="{StaticResource Button.Enabled.Foreground}"/>

            </Trigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style x:Key="AddButtonStyle"
           TargetType="{x:Type Controls:IconButton}"
           BasedOn="{StaticResource BaseIconButtonStyle}">

        <Setter Property="Background"
                Value="{StaticResource App.Green}"/>

        <Setter Property="Foreground"
                Value="{StaticResource App.White}"/>

        <Setter Property="BorderBrush"
                Value="{StaticResource App.Transparent}"/>

        <Setter Property="BorderThickness"
                Value="1"/>

        <Setter Property="Icon"
                Value="{StaticResource AddIcon}"/>

        <Setter Property="Template"
                Value="{StaticResource AddButtonTemplate}"/>
    </Style>

    <ControlTemplate x:Key="RemoveButtonTemplate"
                     TargetType="{x:Type Controls:IconButton}">

        <Border x:Name="border" 
                CornerRadius="4"
                Padding="{TemplateBinding Padding}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}" 
                SnapsToDevicePixels="True">

            <Grid>

                <Grid.ColumnDefinitions>

                    <ColumnDefinition Width="*"/>

                    <ColumnDefinition Width="Auto"/>

                    <ColumnDefinition Width="3"/>

                    <ColumnDefinition Width="Auto"/>

                    <ColumnDefinition Width="*"/>

                </Grid.ColumnDefinitions>

                <Viewbox x:Name="iconViewbox"
                         Grid.Column="1">

                    <Canvas Width="24"
                            Height="24">

                        <Path Fill="{TemplateBinding Foreground}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Data="{TemplateBinding Icon}"/>

                    </Canvas>

                </Viewbox>

                <ContentPresenter x:Name="contentPresenter" 
                                  Grid.Column="3"
                                  ContentTemplate="{TemplateBinding ContentTemplate}" 
                                  Content="{TemplateBinding Content}" 
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                  Focusable="False" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

            </Grid>

        </Border>

        <ControlTemplate.Triggers>

            <Trigger Property="Button.IsDefaulted" 
                     Value="True">

                <Setter Property="BorderBrush" 
                        TargetName="border" 
                        Value="{StaticResource App.VioletBlue}"/>

            </Trigger>

            <Trigger Property="IsMouseOver" 
                     Value="True">

                <Setter Property="Background" 
                        TargetName="border" 
                        Value="{StaticResource App.LightRed}"/>

            </Trigger>

            <Trigger Property="IsPressed" 
                     Value="True">

                <Setter Property="Background" 
                        TargetName="border" 
                        Value="{StaticResource App.DarkRed}"/>

            </Trigger>

            <Trigger Property="ToggleButton.IsChecked"
                     Value="True">

                <Setter Property="Background" 
                        TargetName="border" 
                        Value="{StaticResource Button.Toggle.Checked.Background}"/>

                <Setter Property="BorderBrush"
                        TargetName="border" 
                        Value="{StaticResource Button.Toggle.Checked.Border}"/>

            </Trigger>

            <Trigger Property="Content"
                     Value="{x:Null}">

                <Setter Property="Grid.ColumnSpan"
                        TargetName="iconViewbox"
                        Value="2"/>

            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">

                <Setter Property="Background" 
                        TargetName="border"
                        Value="{StaticResource Button.Enabled.Background}"/>

                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource Button.Enabled.Border}"/>

                <Setter Property="Foreground"
                        Value="{StaticResource Button.Enabled.Foreground}"/>

            </Trigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style x:Key="RemoveButtonStyle"
           TargetType="{x:Type Controls:IconButton}"
           BasedOn="{StaticResource AddButtonStyle}">

        <Setter Property="Background"
                Value="{StaticResource App.Red}"/>

        <Setter Property="Icon"
                Value="{StaticResource TrashIcon}"/>

        <Setter Property="Template"
                Value="{StaticResource RemoveButtonTemplate}"/>

    </Style>

    <ControlTemplate x:Key="FlatIconButtonTemplate"
                     TargetType="{x:Type Controls:IconButton}">

        <Border x:Name="border"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}" 
                SnapsToDevicePixels="True">

            <Grid>

                <Viewbox Width="72"
                         Height="72">

                    <Path Fill="{TemplateBinding Foreground}"
                          Focusable="False" 
                          Data="{TemplateBinding Icon}"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                          Margin="{TemplateBinding Padding}" 
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                </Viewbox>

            </Grid>

        </Border>

        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" 
                     Value="true">

                <Setter Property="Foreground" 
                        Value="{StaticResource App.White}"/>

            </Trigger>

            <Trigger Property="IsEnabled" 
                     Value="False">

                <Setter Property="Background"
                        TargetName="border"
                        Value="{StaticResource App.DarkGray}"/>

                <Setter Property="Foreground" 
                        Value="{StaticResource App.White}"/>

            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">

                <Setter Property="Background"
                        TargetName="border"
                        Value="{StaticResource App.DarkGray}"/>

            </Trigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style x:Key="FlatIconButtonStyle" 
           TargetType="{x:Type Controls:IconButton}" >

        <Setter Property="Background" 
                Value="{StaticResource App.Transparent}" />

        <Setter Property="Foreground" 
                Value="{StaticResource App.LightSlateGray}" />

        <Setter Property="BorderThickness" 
                Value="0" />

        <Setter Property="Padding" 
                Value="30" />

        <Setter Property="Margin" 
                Value="0" />

        <Setter Property="Width" 
                Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />

        <Setter Property="Template"
                Value="{StaticResource FlatIconButtonTemplate}"/>

    </Style>

    <ControlTemplate x:Key="FlatRemoveButtonTemplate"
                     TargetType="{x:Type Button}">

        <Border x:Name="border">

            <ContentPresenter Content="X"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

        </Border>

        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter Property="Foreground"
                        Value="{StaticResource App.Black}"/>

            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">

                <Setter Property="Opacity"
                        Value="0.3"/>

            </Trigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style x:Key="FlatRemoveButtonStyle"
           TargetType="{x:Type Button}">

        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>

        <Setter Property="VerticalContentAlignment"
                Value="Center"/>

        <Setter Property="Foreground"
                Value="{StaticResource App.LightSlateGray}"/>

        <Setter Property="FontSize"
                Value="{StaticResource LargeFontSize}"/>

        <Setter Property="Template"
                Value="{StaticResource FlatRemoveButtonTemplate}"/>

    </Style>

</ResourceDictionary>